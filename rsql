#!/usr/bin/env ruby

require 'yaml'
require 'optparse'

COMMAND_OPTIONS = {
  'mysqldump' => %w[
    --quick
    --single-transaction
    --create-options
    --tz-utc
    --disable-keys
  ]
}

config = nil

path = "."
while (File.exists?(path) and (path.length < 255) and !config)
  if (File.exists?("#{path}/config/database.yml"))
    File.open("#{path}/config/database.yml") do |f|
      config = YAML.load(f)
    end
  else
    path = "../#{path}"
  end
end

unless (config)
  puts "Could not find database.yml"
  exit(-1)
end

command = "mysql"
verbose = false
create = false
reload = true

opts = OptionParser.new
opts.on("-c", "--create") { create = true }
opts.on("-v", "--verbose") { verbose = true }
opts.on("-d", "--dump") { command = "mysqldump" }
opts.on("-R","--no-reload") { reload = false }
opts.on("-b", "--backup") { command = "mysqldump" }

args = opts.parse(*ARGV)

environ = (args.shift or ENV['RAILS_ENV'] or "development")

if (config and config[environ])
  config = config[environ]

  puts config.inspect if (verbose)
  
  cmdline = [
    "--user=#{config['username']}",
    "--password=#{config['password']}",
    "--default-character-set=binary"
  ]

  if (reload and command == "mysqldump")
    cmdline << '--add-drop-database'
  end

  %w[ host port socket ].each do |option|
    if (config[option])
      cmdline << "--#{option}=#{config[option]}"
    end
  end

  exec(command,
    config['database'],
    *(cmdline + args)
  )
elsif (config)
  print "Could not find environment #{environ} in configuration file\n"
  exit(-2)
else
  print "Could not find or read Rails configuration file\n"
  exit(-1)
end
